<manifest xmlns:android="http://schemas.android.com/apk/res/android" >

    <!-- Requisitos de hardware para filtrar dispositivos compatibles -->

    <!-- Indica que Bluetooth clásico es obligatorio -->
    <uses-feature android:name="android.hardware.bluetooth" android:required="true" />

    <!-- Para evitar que se instale en TVs o cualquier dispositivo sin touchscreen -->
    <uses-feature android:name="android.hardware.touchscreen" android:required="true" />

    <!-- Opcional: indica que no es una app de reloj inteligente (Wear OS) -->
    <uses-feature android:name="android.hardware.type.watch" android:required="false" />

    <!-- Opcional: indica que no es una app para autos (Android Auto) -->
    <uses-feature android:name="android.hardware.type.automotive" android:required="false" />


    <!-- Comienza seccion de permisos necesarios para bluetooth -->

    <!-- Permisos base para Bluetooth clásico, no se necesitan pedir en tiempo de ejecucion -->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>

    <!-- Permiso necesario en version Android <= 11, es necesario solicitarlo en tiempo de ejecucion -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>

    <!-- Permisos requerido en Android 12+, es necesario pedirlos en tiempo de ejecucion-->
    <uses-permission
        android:name="android.permission.BLUETOOTH_CONNECT"/>

    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" android:usesPermissionFlags="neverForLocation" />

    <!-- Termina seccion de permisos Bluetooth -->

    <application
        android:label="app_lladi"
        android:name="${applicationName}"
        android:enableOnBackInvokedCallback="true"
        android:icon="@mipmap/ic_launcher">

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
